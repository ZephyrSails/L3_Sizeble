(:go
	(:go
		0 1
		(rdi <- 5)
		(rsi <- 5)
		(call allocate 2)
		(r10 <- rax)
		((mem rsp 0) <- r10)
		(r10 <- (mem rsp 0))
		((mem r10 8) <- 85)
		(r10 <- (mem rsp 0))
		(rdi <- r10)
		(call print 1)
		(r10 <- (mem rsp 0))
		(rdi <- r10)
		((mem rsp -8) <- :printArray_ret)
		(call :printArray 1)
		:printArray_ret
		(rdi <- 5)
		(rsi <- 5)
		(call allocate 2)
		(r11 <- rax)
		(r10 <- (mem rsp 0))
		((mem r10 8) <- r11)
		(r10 <- (mem rsp 0))
		(rdi <- r10)
		(call print 1)
		(r10 <- (mem rsp 0))
		(rdi <- r10)
		((mem rsp -8) <- :printArray_ret2)
		(call :printArray 1)
		:printArray_ret2
		(return)
	)

	(:printArray
		1 3
		(r10 <- rdi)
		((mem rsp 0) <- r10)
		(r10 <- 0)
		((mem rsp 8) <- r10)
		(r10 <- (mem rsp 0))
		(r10 <- (mem r10 0))
		((mem rsp 16) <- r10)
		(r10 <- (mem rsp 0))
		(r10 <- r10)
		(r10 &= 1)
		(cjump r10 = 0 :isAnArray :isAnInt)
		:isAnInt
		(rax <- 0)
		(return)
		:isAnArray
		:check
		(r10 <- (mem rsp 8))
		(r11 <- (mem rsp 16))
		(cjump r10 < r11 :true :false)
		:true
		(r10 <- (mem rsp 8))
		(r11 <- r10)
		(r11 <<= 1)
		(r11++)
		(r10 <- (mem rsp 0))
		(rdi <- r10)
		(rsi <- r11)
		((mem rsp -8) <- :printData_ret)
		(call :printData 2)
		:printData_ret
		(r10 <- (mem rsp 8))
		(r10++)
		((mem rsp 8) <- r10)
		(goto :check)
		:false
		(rax <- 1)
		(return)
	)

	(:printData
		2 3
		(r10 <- rdi)
		((mem rsp 0) <- r10)
		(r10 <- rsi)
		((mem rsp 8) <- r10)
		(r10 <- (mem rsp 8))
		(rdi <- r10)
		(call print 1)
		(r10 <- (mem rsp 0))
		(r10 <- (mem r10 0))
		(r10 <- r10)
		(r10 <<= 1)
		(r10 += 1)
		(r11 <- (mem rsp 8))
		(cjump r11 < r10 :correct :wrong)
		:wrong
		(r10 <- (mem rsp 0))
		(rdi <- r10)
		(r10 <- (mem rsp 8))
		(rsi <- r10)
		(call array-error 2)
		:correct
		(r10 <- (mem rsp 8))
		(r10 <- r10)
		((mem rsp 16) <- r10)
		(r10 <- (mem rsp 16))
		(r10 >>= 1)
		((mem rsp 16) <- r10)
		(r10 <- (mem rsp 16))
		(r10 *= 8)
		((mem rsp 16) <- r10)
		(r10 <- (mem rsp 16))
		(r10 += 8)
		((mem rsp 16) <- r10)
		(r10 <- (mem rsp 16))
		(r10 <- r10)
		(r10 <<= 1)
		(r10 += 1)
		(rdi <- r10)
		(call print 1)
		(r10 <- (mem rsp 16))
		(r10 <- r10)
		(r11 <- (mem rsp 0))
		(r10 += r11)
		(r10 <- (mem r10 0))
		(r11 <- r10)
		(r11 &= 1)
		(cjump r11 = 0 :isAnArray2 :isAnInt2)
		:isAnInt2
		(rdi <- r10)
		(call print 1)
		(goto :exitFunction)
		:isAnArray2
		((mem rsp -8) <- :exitFunction)
		(rdi <- r10)
		(call :printArray 1)
		:exitFunction
		(return)
	)

)
